import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Import dynamic character extraction
import { extractCharacterData } from './extractCharacterDataDynamic.js';
// Import card data extraction
import { extractAllCardData } from './extractCardDataComplete.js';

// Main execution function
async function main() {
    try {
        console.log('üöÄ B·∫Øt ƒë·∫ßu generate JSON files...\n');
        
        // Extract character data dynamically
        console.log('üìñ ƒêang tr√≠ch xu·∫•t d·ªØ li·ªáu Character...');
        const characterData = await extractCharacterData();

        // ƒê∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c src/data
        const dataDir = path.join(process.cwd(), 'src', 'data');
        const characterOutputFile = path.join(dataDir, 'cardCharacterList.json');

        // T·∫°o th∆∞ m·ª•c data n·∫øu ch∆∞a t·ªìn t·∫°i
        if (!fs.existsSync(dataDir)) {
            fs.mkdirSync(dataDir, { recursive: true });
            console.log('‚úÖ Created directory: src/data');
        }

        // Ghi d·ªØ li·ªáu character v√†o file JSON
        const characterJsonData = JSON.stringify(characterData, null, 2);
        fs.writeFileSync(characterOutputFile, characterJsonData, 'utf8');
        
        console.log('‚úÖ Successfully generated cardCharacterList.json');
        console.log(`üìÅ File location: ${characterOutputFile}`);
        console.log(`üìä Generated ${characterData.length} character cards:`);
        
        characterData.forEach((char, index) => {
            console.log(`   ${index + 1}. ${char.name} (${char.element}) - ${char.description}`);
        });
        
        console.log('\n' + '='.repeat(50) + '\n');
        
        // Extract all card data (non-character)
        console.log('üìñ ƒêang tr√≠ch xu·∫•t d·ªØ li·ªáu t·∫•t c·∫£ cards (kh√¥ng bao g·ªìm Character)...');
        const allCardData = await extractAllCardData();
        
        // L∆∞u d·ªØ li·ªáu all cards v√†o file JSON
        const libraryCardsOutputFile = path.join(dataDir, 'libraryCards.json');
        const libraryCardsJsonData = JSON.stringify(allCardData, null, 2);
        fs.writeFileSync(libraryCardsOutputFile, libraryCardsJsonData, 'utf8');
        
        console.log('‚úÖ Successfully generated libraryCards.json');
        console.log(`üìÅ File location: ${libraryCardsOutputFile}`);
        
        console.log('\nüéâ Ho√†n th√†nh generate t·∫•t c·∫£ JSON files!');
        console.log('üìã Files ƒë√£ ƒë∆∞·ª£c t·∫°o:');
        console.log(`   - cardCharacterList.json (${characterData.length} character cards)`);
        console.log(`   - libraryCards.json (${Object.values(allCardData).reduce((sum, arr) => sum + arr.length, 0)} total cards)`);
        
    } catch (error) {
        console.error('‚ùå Error generating JSON files:', error.message);
        process.exit(1);
    }
}

// Run main function
main();
